<?xml version="1.0" encoding="utf-8"?>
<!--
/*
**
** Copyright 2008, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->
<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.android.launcher3">

    <uses-sdk
        android:minSdkVersion="16"
        android:targetSdkVersion="21"/>

    <!-- 自定义的权限，用于提供给别的应用使用 -->
    <!-- 当别的应用要使用该权限时，直接调用<uses-permission> -->

    <!--
    android:name :权限的唯一标识，一般都是使用 报名加权限名
    android:description :对权限的描述，一般是两句话，第一句话描述这个权限所针对的操作，第二句话告诉用户授予app这个权限会带来的后果
    android:label: 对权限的一个简短描述
    android:permissionGroup: 权限所属权限组的名称
    android:protectionLevel: 权限的等级
        * normal 是最低的等级，声明次权限的app，系统会默认授予次权限，不会提示用户
        * dangerous  权限对应的操作有安全风险，系统在安装声明此类权限的app时会提示用户
        * signature  权限表明的操作只针对使用同一个证书签名的app开放
        * signatureOrSystem  与signature类似，只是增加了rom中自带的app的声明
    -->


    <!-- 这个是允许应用在桌面上安装快捷方式的权限，其中permissionGroup的设置为跟系统API相关的权限组-->
    <permission
        android:name="com.android.launcher.permission.INSTALL_SHORTCUT"
        android:description="@string/permdesc_install_shortcut"
        android:label="@string/permlab_install_shortcut"
        android:permissionGroup="android.permission-group.SYSTEM_TOOLS"
        android:protectionLevel="dangerous"/>

    <!-- 允许应用删除桌面上的快捷方式的权限 -->
    <permission
        android:name="com.android.launcher.permission.UNINSTALL_SHORTCUT"
        android:description="@string/permdesc_uninstall_shortcut"
        android:label="@string/permlab_uninstall_shortcut"
        android:permissionGroup="android.permission-group.SYSTEM_TOOLS"
        android:protectionLevel="dangerous"/>

    <!-- 允许应用读取主屏幕中的设置和快捷方式，不明白意思 -->
    <permission
        android:name="com.android.launcher3.permission.READ_SETTINGS"
        android:description="@string/permdesc_read_settings"
        android:label="@string/permlab_read_settings"
        android:permissionGroup="android.permission-group.SYSTEM_TOOLS"
        android:protectionLevel="normal"/>

    <!-- 写入主屏幕设置和快捷方式 -->
    <permission
        android:name="com.android.launcher3.permission.WRITE_SETTINGS"
        android:description="@string/permdesc_write_settings"
        android:label="@string/permlab_write_settings"
        android:permissionGroup="android.permission-group.SYSTEM_TOOLS"
        android:protectionLevel="signatureOrSystem"/>

    <!-- 网上说这个是接收启动广播 -->
    <permission
        android:name="com.android.launcher3.permission.RECEIVE_LAUNCH_BROADCASTS"
        android:protectionLevel="signature"
        />

    <!-- 从字面上猜测这个应该是接收首次加载的广播 -->
    <permission
        android:name="com.android.launcher3.permission.RECEIVE_FIRST_LOAD_BROADCAST"
        android:protectionLevel="signatureOrSystem"/>

    <uses-permission android:name="android.permission.CALL_PHONE"/> <!-- 拨打电话 -->
    <uses-permission android:name="android.permission.SET_WALLPAPER"/><!-- 设置壁纸 -->
    <uses-permission android:name="android.permission.SET_WALLPAPER_HINTS"/><!-- 设置壁纸（桌面）提示，目前不懂这个什么用，是初次启动Launcher的使用提示吗？ -->
    <uses-permission android:name="android.permission.VIBRATE"/><!-- 震动 -->
    <uses-permission android:name="android.permission.BIND_APPWIDGET"/><!-- 访问AppWidget数据 -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS"/><!-- 访问账号服务的账号列表 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/><!-- 读取外部存储 -->
    <uses-permission android:name="android.permission.BROADCAST_STICKY"/><!-- 粘性广播的接收权限？ -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/><!-- 开机自启动，其实就是接收boot加载完的信号吧 -->
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS"/>
    <uses-permission android:name="com.android.launcher.permission.WRITE_SETTINGS"/>
    <uses-permission android:name="com.android.launcher3.permission.READ_SETTINGS"/>
    <uses-permission android:name="com.android.launcher3.permission.WRITE_SETTINGS"/>
    <uses-permission android:name="com.android.launcher3.permission.RECEIVE_LAUNCH_BROADCASTS"/>
    <uses-permission android:name="com.android.launcher3.permission.RECEIVE_FIRST_LOAD_BROADCAST"/>

    <!-- android:allowBackup：是否允许备份和恢复操作 -->
    <!-- android:backupAgent：制定处理备份服务的类或应用吧 -->
    <!-- android:largeHeap：是否申请大内存 -->
    <!-- android:restoreAnyVersion：允许恢复任意版本的备份数据来恢复应用程序的数据 -->
    <!-- android:supportsRtl：支持从右到左的布局，实测貌似没有什么变化 -->
    <application
        android:name=".LauncherApplication"
        android:allowBackup="@bool/enable_backup"
        android:backupAgent="com.android.launcher3.LauncherBackupAgentHelper"
        android:hardwareAccelerated="true"
        android:icon="@mipmap/ic_launcher_home"
        android:label="@string/application_name"
        android:largeHeap="@bool/config_largeHeap"
        android:restoreAnyVersion="true"
        android:supportsRtl="true">

        <!-- android:clearTaskOnLaunch：从任何地方按home键回来都是显示这个页面,如果是普通程序，在其他界面点击该程序图标回来，还是会显示设置了这个的页面 -->
        <!-- android:stateNotNeeded：不保存应用状态，从程序外面回到程序里面，都会重新加载该activity -->
        <!-- adjustPan的作用是当需要输入时，输入框光标所在内容会自动上移直到看到光标 -->
        <activity
            android:name=".Launcher"
            android:clearTaskOnLaunch="true"
            android:enabled="true"
            android:launchMode="singleTask"
            android:screenOrientation="nosensor"
            android:stateNotNeeded="true"
            android:theme="@style/Theme"
            android:windowSoftInputMode="adjustPan">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
                <!-- HOME：靠该表示来判断是否为桌面 -->
                <category android:name="android.intent.category.HOME"/>
                <!-- DEFAULT：匹配隐式intent -->
                <category android:name="android.intent.category.DEFAULT"/>
                <!-- MONKEY：被monkey或者其他的自动测试工具执行 -->
                <category android:name="android.intent.category.MONKEY"/>
            </intent-filter>
        </activity>

        <activity
            android:name=".LauncherExtension"
            android:clearTaskOnLaunch="true"
            android:enabled="false"
            android:launchMode="singleTask"
            android:screenOrientation="nosensor"
            android:stateNotNeeded="true"
            android:theme="@style/Theme"
            android:windowSoftInputMode="adjustPan">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.HOME"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.MONKEY"/>
            </intent-filter>
        </activity>

        <activity
            android:name=".ToggleWeightWatcher"
            android:enabled="@bool/debug_memory_enabled"
            android:icon="@mipmap/ic_launcher_home"
            android:label="@string/toggle_weight_watcher">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <activity
            android:name=".LauncherWallpaperPickerActivity"
            android:finishOnCloseSystemDialogs="true"
            android:icon="@mipmap/ic_launcher_wallpaper"
            android:label="@string/pick_wallpaper"
            android:process=":wallpaper_chooser"
            android:theme="@style/Theme.WallpaperPicker">
            <intent-filter>
                <action android:name="android.intent.action.SET_WALLPAPER"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>

        <activity
            android:name=".WallpaperCropActivity"
            android:finishOnCloseSystemDialogs="true"
            android:icon="@mipmap/ic_launcher_wallpaper"
            android:label="@string/crop_wallpaper"
            android:process=":wallpaper_chooser"
            android:theme="@style/Theme.WallpaperCropper">
            <intent-filter>
                <action android:name="android.service.wallpaper.CROP_AND_SET_WALLPAPER"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:mimeType="image/*"/>
            </intent-filter>
        </activity>

        <!-- Debugging tools -->
        <activity
            android:name=".MemoryDumpActivity"
            android:enabled="@bool/debug_memory_enabled"
            android:excludeFromRecents="true"
            android:icon="@mipmap/ic_launcher_home"
            android:label="@string/debug_memory_activity"
            android:theme="@android:style/Theme.NoDisplay"
            >
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <service
            android:name=".MemoryTracker"
            android:enabled="@bool/debug_memory_enabled"
            >
        </service>

        <receiver
            android:name=".WallpaperChangedReceiver">
            <intent-filter>
                <action android:name="android.intent.action.WALLPAPER_CHANGED"/>
            </intent-filter>
        </receiver>

        <!-- Intent received used to install shortcuts from other applications -->
        <receiver
            android:name=".InstallShortcutReceiver"
            android:permission="com.android.launcher.permission.INSTALL_SHORTCUT">
            <intent-filter>
                <action android:name="com.android.launcher.action.INSTALL_SHORTCUT"/>
            </intent-filter>
        </receiver>

        <!-- Intent received used to uninstall shortcuts from other applications -->
        <receiver
            android:name=".UninstallShortcutReceiver"
            android:permission="com.android.launcher.permission.UNINSTALL_SHORTCUT">
            <intent-filter>
                <action android:name="com.android.launcher.action.UNINSTALL_SHORTCUT"/>
            </intent-filter>
        </receiver>

        <!-- Intent received used to initialize a restored widget -->
        <receiver android:name=".AppWidgetsRestoredReceiver">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_HOST_RESTORED"/>
            </intent-filter>
        </receiver>

        <!-- New user initialization; set up initial wallpaper -->
        <receiver
            android:name=".UserInitializeReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.USER_INITIALIZE"/>
            </intent-filter>
        </receiver>

        <receiver android:name=".PackageChangedReceiver">
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_CHANGED"/>
                <action android:name="android.intent.action.PACKAGE_REPLACED"/>
                <action android:name="android.intent.action.PACKAGE_REMOVED"/>

                <data android:scheme="package"></data>
            </intent-filter>
        </receiver>

        <receiver android:name=".StartupReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
            </intent-filter>
        </receiver>

        <!-- The settings provider contains Home's data, like the workspace favorites -->
        <provider
            android:name=".LauncherProvider"
            android:authorities="com.android.launcher3.settings"
            android:exported="true"
            android:readPermission="com.android.launcher3.permission.READ_SETTINGS"
            android:writePermission="com.android.launcher3.permission.WRITE_SETTINGS"/>

        <meta-data
            android:name="android.nfc.disable_beam_default"
            android:value="true"/>
    </application>
</manifest>
